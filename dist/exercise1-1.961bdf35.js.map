{"version":3,"sources":["components/stage/stage.js","exercise1-1.js"],"names":["Stage","canvasElement","canvas","ctx","getContext","animating","onResize","bind","render","width","clientWidth","height","clientHeight","delta","onUpdate","update","requestAnimationFrame","setStageSize","window","addEventListener","_ctx","value","_onUpdate","stage","document","querySelector","init","Walker","x","y","size","rand","Math","random","floor","sin","fillStyle","fillRect","beginPath","arc","PI","closePath","fill","w","draw"],"mappings":"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","file":"exercise1-1.961bdf35.js","sourceRoot":"../src","sourcesContent":["class Stage {\n  constructor(canvasElement) {\n    this.canvas = canvasElement;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.animating = true;\n\n    this.onResize = this.onResize.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  setStageSize() {\n    this.canvas.width = this.canvas.clientWidth;\n    this.canvas.height = this.canvas.clientHeight;\n  }\n\n  update(delta) {\n    if (this.onUpdate) {\n      this.onUpdate(delta);\n    }\n  }\n\n  render(delta) {\n    if (!delta) delta = 0;\n    this.update(delta);\n    if (this.animating) requestAnimationFrame(this.render);\n  }\n\n  onResize() {\n    this.setStageSize();\n    this.update();\n  }\n\n  init() {\n    this.setStageSize();\n    this.render();\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  get ctx() {\n    return this._ctx;\n  }\n\n  set ctx(value) {\n    this._ctx = value;\n  }\n\n  get onUpdate() {\n    return this._onUpdate || null;\n  }\n\n  set onUpdate(value) {\n    this._onUpdate = value;\n  }\n}\n\nexport default Stage;\n","import Stage from \"./components/stage/stage\";\n\n// --------------\n// initialization\n// --------------\nconst stage = new Stage(document.querySelector(\"#canvas\"));\nconst ctx = stage.ctx;\nstage.init();\n\n// --------------\n// exercise code\n// --------------\nclass Walker {\n  constructor(ctx, x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.ctx = ctx;\n  }\n\n  update(delta) {\n    const rand = Math.random();\n\n    // random direction\n    if (rand < 0.25) {\n      this.x++;\n    } else if (rand < 0.5) {\n      this.x--;\n    } else if (rand < 0.75) {\n      this.y++;\n    } else {\n      this.y--;\n    }\n\n    // grow/shrink width\n    this.size = Math.floor(Math.sin(delta * 0.001) * 5 + 6);\n  }\n\n  draw() {\n    this.ctx.fillStyle = \"rgba(255,255,255,0.05)\";\n    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n\n    ctx.fillStyle = \"black\";\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n}\n\nconst w = new Walker(\n  ctx,\n  ctx.canvas.width * 0.5,\n  ctx.canvas.height * 0.5,\n  2,\n  2\n);\nstage.onUpdate = (delta) => {\n  w.update(delta);\n  w.draw();\n};\n"]}